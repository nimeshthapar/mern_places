{"version":3,"sources":["shared/components/Card/Card.js","places/components/PlaceItem.module.css","places/components/PlaceList.module.css","shared/components/Map/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Card","props","className","style","children","module","exports","Map","title","width","height","frameBorder","scrolling","marginHeight","marginWidth","src","lat","lng","type","PlaceItem","authCtx","useContext","AuthContext","useState","showMap","setShowMap","showDeleteModal","setShowDeleteModal","useHttp","isLoading","error","sendRequest","deleteErrorModalHandler","clearError","closeMapHandler","closeDeleteModalHandler","confirmDeleteModalHandler","a","console","log","process","id","Authorization","token","onDelete","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","classes","footerClass","footer","Button","onClick","coordinates","toString","inverse","danger","LoadingSpinner","asOverlay","image","alt","description","userId","creatorId","to","PlaceList","places","length","map","place","key","imageURL","creator","location","UserPlaces","setPlaces","uid","useParams","userPlacesErrorModalHandler","useEffect","responseData","fetchPlaces","deletePlaceId","prev","filter"],"mappings":"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","file":"static/js/8.32d00802.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"place-item\":\"PlaceItem_place-item__3luRR\",\"place-item__content\":\"PlaceItem_place-item__content__1PYda\",\"place-item__info\":\"PlaceItem_place-item__info__JSvu5\",\"place-item__image\":\"PlaceItem_place-item__image__2TuqL\",\"place-item__actions\":\"PlaceItem_place-item__actions__1urzl\",\"place-item__modal-content\":\"PlaceItem_place-item__modal-content__1dEIz\",\"place-item__modal-actions\":\"PlaceItem_place-item__modal-actions__3PZGA\",\"map-container\":\"PlaceItem_map-container__1XGlw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"place-list\":\"PlaceList_place-list__3iRXI\"};","import React, { Fragment } from 'react';\r\n\r\nconst Map = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <iframe\r\n        title=\"map\"\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        frameBorder=\"0\"\r\n        scrolling=\"no\"\r\n        marginHeight=\"0\"\r\n        marginWidth=\"0\"\r\n        src={\r\n          'https://maps.google.com/maps?q=' +\r\n          props.lat +\r\n          ',' +\r\n          props.lng +\r\n          '&t=&z=15&ie=UTF8&iwloc=&output=embed'\r\n        }\r\n      ></iframe>\r\n      <script\r\n        type=\"text/javascript\"\r\n        src=\"https://embedmaps.com/google-maps-authorization/script.js?id=5a33be79e53caf0a07dfec499abf84b7b481f165\"\r\n      ></script>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { Fragment, useState, useContext } from 'react';\r\n\r\nimport Card from '../../shared/components/Card/Card';\r\nimport Button from '../../shared/components/Button/Button';\r\nimport Map from '../../shared/components/Map/Map';\r\nimport classes from './PlaceItem.module.css';\r\nimport Modal from '../../shared/components/Modal/Modal';\r\nimport AuthContext from '../../shared/store/auth-context';\r\nimport useHttp from '../../shared/hooks/use-http';\r\nimport LoadingSpinner from '../../shared/components/LoadingSpinner/LoadingSpinner';\r\nimport ErrorModal from '../../shared/components/Modal/ErrorModal';\r\n\r\nconst PlaceItem = (props) => {\r\n  const authCtx = useContext(AuthContext);\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n\r\n  const {\r\n    isLoading,\r\n    error,\r\n    sendRequest,\r\n    clearError: deleteErrorModalHandler,\r\n  } = useHttp();\r\n\r\n  const openMapHandler = () => {\r\n    setShowMap(true);\r\n  };\r\n\r\n  const closeMapHandler = () => {\r\n    setShowMap(false);\r\n  };\r\n\r\n  const openDeleteModalHandler = () => {\r\n    setShowDeleteModal(true);\r\n  };\r\n\r\n  const closeDeleteModalHandler = () => {\r\n    setShowDeleteModal(false);\r\n  };\r\n\r\n  const confirmDeleteModalHandler = async () => {\r\n    setShowDeleteModal(false);\r\n    console.log('DELETING....');\r\n\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\r\n        'DELETE',\r\n        null,\r\n        {\r\n          Authorization: `Bearer ${authCtx.token}`,\r\n        }\r\n      );\r\n\r\n      props.onDelete(props.id);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {error && <ErrorModal error={error} onClear={deleteErrorModalHandler} />}\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass={classes['place-item__modal-content']}\r\n        footerClass={classes['place-item__modal-actions']}\r\n        footer={<Button onClick={closeMapHandler}>Close</Button>}\r\n      >\r\n        <div className={classes['map-container']}>\r\n          <Map\r\n            lat={props.coordinates.lat.toString()}\r\n            lng={props.coordinates.lng.toString()}\r\n          />\r\n        </div>\r\n      </Modal>\r\n\r\n      <Modal\r\n        show={showDeleteModal}\r\n        onCancel={closeDeleteModalHandler}\r\n        header={'Are you sure?'}\r\n        contentClass={classes['place-item__modal-content']}\r\n        footerClass={classes['place-item__modal-actions']}\r\n        footer={\r\n          <Fragment>\r\n            <Button onClick={closeDeleteModalHandler} inverse>\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={confirmDeleteModalHandler} danger>\r\n              Confirm\r\n            </Button>\r\n          </Fragment>\r\n        }\r\n      >\r\n        <Fragment>\r\n          <p>\r\n            Do you want to proceed and delete this place? Please note that it\r\n            can't be undone thereafter.\r\n          </p>\r\n        </Fragment>\r\n      </Modal>\r\n\r\n      <li className={classes['place-item']}>\r\n        <Card className={classes['place-item__content']}>\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className={classes['place-item__image']}>\r\n            <img\r\n              src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`}\r\n              alt={props.title}\r\n            />\r\n          </div>\r\n          <div className={classes['place-item__info']}>\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className={classes['place-item__actions']}>\r\n            <Button inverse onClick={openMapHandler}>\r\n              View on Map\r\n            </Button>\r\n            {authCtx.userId === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>Edit</Button>\r\n            )}\r\n            {authCtx.userId === props.creatorId && (\r\n              <Button danger onClick={openDeleteModalHandler}>\r\n                Delete\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from 'react';\r\n\r\nimport Button from '../../shared/components/Button/Button';\r\nimport Card from '../../shared/components/Card/Card';\r\nimport PlaceItem from './PlaceItem';\r\nimport classes from './PlaceList.module.css';\r\n\r\nconst PlaceList = (props) => {\r\n  if (props.places.length === 0) {\r\n    return (\r\n      <div className={`${classes['place-list']} center`}>\r\n        <Card>\r\n          <h2>No Places Found. Maybe Create one?</h2>\r\n          <Button to=\"/places/new\">Add a Place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className={classes['place-list']}>\r\n      {props.places.map((place) => (\r\n        <PlaceItem\r\n          key={place.id}\r\n          id={place.id}\r\n          image={place.imageURL}\r\n          title={place.title}\r\n          description={place.description}\r\n          creatorId={place.creator}\r\n          address={place.address}\r\n          coordinates={place.location}\r\n          onDelete={props.onDelete}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PlaceList;\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport PlaceList from '../components/PlaceList';\r\nimport ErrorModal from '../../shared/components/Modal/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/LoadingSpinner/LoadingSpinner';\r\nimport useHttp from '../../shared/hooks/use-http';\r\n\r\nconst UserPlaces = () => {\r\n  const [places, setPlaces] = useState([]);\r\n  const { uid } = useParams();\r\n\r\n  const {\r\n    isLoading,\r\n    error,\r\n    sendRequest,\r\n    clearError: userPlacesErrorModalHandler,\r\n  } = useHttp();\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${uid}`\r\n        );\r\n\r\n        setPlaces(responseData.places);\r\n      } catch (err) {}\r\n    };\r\n    fetchPlaces();\r\n  }, [sendRequest, uid]);\r\n\r\n  const placeDeleteHandler = (deletePlaceId) => {\r\n    setPlaces((prev) => prev.filter((place) => place.id !== deletePlaceId));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {error && (\r\n        <ErrorModal error={error} onClear={userPlacesErrorModalHandler} />\r\n      )}\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      <PlaceList places={places} onDelete={placeDeleteHandler} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n"],"sourceRoot":""}